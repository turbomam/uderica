Logging started at 19:10:09 on 16 Jan 2015
QIIME version: 1.9.0-rc2

qiime_config values:
blastmat_dir	/qiime_software/blast-2.2.22-release/data
pick_otus_reference_seqs_fp	/usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta
sc_queue	all.q
pynast_template_alignment_fp	/usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set_aligned/85_otus.fasta
cluster_jobs_fp	start_parallel_jobs.py
assign_taxonomy_reference_seqs_fp	/usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta
torque_queue	friendlyq
jobs_to_start	1
denoiser_min_per_core	50
assign_taxonomy_id_to_taxonomy_fp	/usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/taxonomy/97_otu_taxonomy.txt
temp_dir	/home/ubuntu/temp/
blastall_fp	/qiime_software/blast-2.2.22-release/bin/blastall
seconds_to_sleep	1

parameter file values:
parallel:jobs_to_start	1
pick_otus:max_rejects	8
pick_otus:word_length	8
pick_otus:max_accepts	1
pick_otus:stepwords	8
pick_otus:enable_rev_strand_match	True

Input file md5 sums:
slout/seqs.fna: 0b7c73a4fed20a265a1968bf2c0131cf
/usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta: 50b2269712b3738afb41892bed936c29

Forcing --suppress_new_clusters as this is reference-based OTU picking.

Executing commands.

# Pick Reference OTUs command 
pick_otus.py -i slout/seqs.fna -o otus//step1_otus -r /usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta -m uclust_ref --max_rejects 8 --stepwords 8 --enable_rev_strand_match --word_length 8 --max_accepts 1 --suppress_new_clusters

Stdout:

Stderr:

# Generate full failures fasta file command 
filter_fasta.py -f slout/seqs.fna -s otus//step1_otus/seqs_failures.txt -o otus//step1_otus/failures.fasta

Stdout:

Stderr:

Executing commands.

# Pick rep set command 
pick_rep_set.py -i otus//step1_otus/seqs_otus.txt -o otus//step1_otus/step1_rep_set.fna -f slout/seqs.fna

Stdout:

Stderr:

Executing commands.

# Pick de novo OTUs on step1 failures command 
pick_otus.py -i otus//step1_otus/failures.fasta -o otus//step4_otus/ -m uclust  --max_rejects 8 --denovo_otu_id_prefix New.CleanUp.ReferenceOTU --enable_rev_strand_match --word_length 8 --stepwords 8 --max_accepts 1

Stdout:

Stderr:

# Merge OTU maps command 
cat otus//step1_otus/seqs_otus.txt  otus//step4_otus//failures_otus.txt > otus//final_otu_map.txt

Stdout:

Stderr:

# Pick representative set for subsampled failures command 
pick_rep_set.py -i otus//step4_otus//failures_otus.txt -o otus//step4_otus//step4_rep_set.fna -f otus//step1_otus/failures.fasta

Stdout:

Stderr:

# Filter singletons from the otu map using API 
python -c "import qiime; qiime.filter.filter_otus_from_otu_map('/home/ubuntu/moving_pictures_tutorial-1.9.0/illumina/otus/final_otu_map.txt', '/home/ubuntu/moving_pictures_tutorial-1.9.0/illumina/otus/final_otu_map_mc2.txt', '2')"

# Write non-singleton otus representative sequences from step1 to the final rep set file: otus//rep_set.fna

# Copy the full input refseqs file to the new refseq file
cp /usr/local/lib/python2.7/dist-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta otus//new_refseqs.fna

# Write non-singleton otus representative sequences from step 4 to the final representative set and the new reference set (otus//rep_set.fna and otus//new_refseqs.fna respectively)

Executing commands.

# Make the otu table command 
make_otu_table.py -i otus//final_otu_map_mc2.txt -o otus//otu_table_mc2.biom

Stdout:

Stderr:

Executing commands.

# Assign taxonomy command 
assign_taxonomy.py -o otus//uclust_assigned_taxonomy -i otus//rep_set.fna 

Stdout:

Stderr:

Executing commands.

# Add taxa to OTU table command 
biom add-metadata -i otus//otu_table_mc2.biom --observation-metadata-fp otus//uclust_assigned_taxonomy/rep_set_tax_assignments.txt -o otus//otu_table_mc2_w_tax.biom --sc-separated taxonomy --observation-header OTUID,taxonomy

Stdout:

Stderr:

Executing commands.

# Align sequences command 
align_seqs.py -i otus//rep_set.fna -o otus//pynast_aligned_seqs 

Stdout:

Stderr:

# Filter alignment command 
filter_alignment.py -o otus//pynast_aligned_seqs -i otus//pynast_aligned_seqs/rep_set_aligned.fasta 

Stdout:

Stderr:

# Build phylogenetic tree command 
make_phylogeny.py -i otus//pynast_aligned_seqs/rep_set_aligned_pfiltered.fasta -o otus//rep_set.tre 

Stdout:

Stderr:

Executing commands.


Logging stopped at 19:18:52 on 16 Jan 2015
